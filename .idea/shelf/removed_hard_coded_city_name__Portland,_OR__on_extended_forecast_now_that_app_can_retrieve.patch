Index: app/src/main/java/com/joshbgold/WeatherBuddy/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/joshbgold/WeatherBuddy/MainActivity.java	(date 1449088024000)
+++ app/src/main/java/com/joshbgold/WeatherBuddy/MainActivity.java	(revision )
@@ -106,7 +106,7 @@
     TextView mSunset;
 
     @Override
-    protected void onCreate(Bundle savedInstanceState) {
+    protected void onCreate(final Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
         ButterKnife.inject(this);
@@ -122,12 +122,15 @@
 
         buildGoogleApiClient();  //will use Google API to get current location
 
-        mLatitudeDouble = getLatitudeDouble();
-        mLongitudeDouble = getLongitudeDouble();
+     /*   mLatitudeDouble = getLatitudeDouble();
+        mLongitudeDouble = getLongitudeDouble();*/
 
-        getForecast(mLatitudeDouble, mLongitudeDouble);
+        cityLongitude = LoadPreferences("latitude", (float) 45.523375);
+        cityLatitude = LoadPreferences("longitude", (float) -122.676201);
+        userInputCity = LoadPreferences("location", "Portland");
+        mLocationLabel.setText(userInputCity);
 
-        mLocationLabel.setText(city);
+        getForecast(cityLatitude, cityLongitude);
 
         //open hourly forecast layout
         hourlyButton.setOnClickListener(new View.OnClickListener() {
@@ -162,6 +165,9 @@
                     e.printStackTrace();
                 }
                 getForecast(cityLatitude, cityLongitude);
+                savePrefs("location", userInputCity);
+                savePrefs("latitude", (float)cityLongitude);
+                savePrefs("longitude", (float) cityLatitude);
 
                 //hide the keyboard
                 mInputMethodManager.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);
@@ -178,6 +184,10 @@
     protected void onResume() {
         super.onResume();
         mGoogleApiClient.connect();
+        cityLongitude = LoadPreferences("latitude", (float)45.523375);
+        cityLatitude = LoadPreferences("longitude", (float)-122.676201);
+        userInputCity = LoadPreferences("location", "Portland");
+        mLocationLabel.setText(userInputCity);
     }
 
     @Override
@@ -187,6 +197,9 @@
             LocationServices.FusedLocationApi.removeLocationUpdates(mGoogleApiClient, this);
             mGoogleApiClient.disconnect();
         }
+        savePrefs("location", userInputCity);
+        savePrefs("latitude", (float)cityLongitude);
+        savePrefs("longitude", (float) cityLatitude);
     }
 
     @Override
@@ -507,14 +520,6 @@
         return mDailyWeather;
     }
 
-    //save prefs
-    public void savePrefs(String key, String value) {
-        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
-        SharedPreferences.Editor editor = sharedPreferences.edit();
-        editor.putString(key, value);
-        editor.commit();
-    }
-
     public void getCoordinatesForCity(String cityString) throws IOException {
         Geocoder geocoder = new Geocoder(this);
 
@@ -525,5 +530,33 @@
         cityLatitude = address.getLatitude();
         cityLongitude = address.getLongitude();
 
+    }
+
+    //get prefs
+    private Float LoadPreferences(String key, float value){
+        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
+        Float data = sharedPreferences.getFloat(key, value);
+        return data;
+    }
+
+    private String LoadPreferences(String key, String value){
+        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
+        String data = sharedPreferences.getString(key, value);
+        return data;
+    }
+
+    //save prefs
+    public void savePrefs(String key, float value){
+        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
+        SharedPreferences.Editor editor = sharedPreferences.edit();
+        editor.putFloat(key, value);
+        editor.commit();
+    }
+
+    public void savePrefs(String key, String value) {
+        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
+        SharedPreferences.Editor editor = sharedPreferences.edit();
+        editor.putString(key, value);
+        editor.commit();
     }
 }
